/* * { "*"はユニバーサルセレクターを意味する．全要素に対して.あんま使わない
    background-color: cyan;
}*/

/*cssでは定義が後に書かれた方が採用される*/

/* 開発者ツールで詳細度とか色々確認するのはよく使う．開発者ツールは便利 */

body {
    background-color: #f1faee;
}

button {/*要素セレクター．要素ごとに指定する書き方*/
    font-size: 30px;
    background-color: #a8dadc;
}

h1, h2 {/*セレクターリスト．左側に書いた要素全てに対して適用される*/
    color: #1d3557;
}

#signup {/* "#+ID" で指定したIDを持つものについていじる．htmlにおいてidは一意的でないといけない．*/
    color: #f1faee;
    background-color: #1d3557;
}

span {/*なんかグループ化するためのものと思ってもらっていい．htmlでspanで囲ったものは一気にCSSで加工できる．*/
    color: #457b9d;
}

.tag {/*指定した特定のクラスを編集．クラスセレクターは" . + class名 " で書く*/
    background-color: #e63946;
    color: #f1faee;
    font-size: 16px;
}

.post a {/*子孫セレクター．これだと，postクラスのなかでのa要素に対してcssを反映させるということ．post自体には何も適応されない*/
    color: #457b9d;
    text-decoration: none;
    font-weight: 700;
}

footer a {
    color: #e63946;
}

h2 + button {/*隣接セレクター：同じ親要素の子同士でh2タグの直後のbuttonを選択するということ．p全部ではない*/
    font-size: 20px;
}

footer > a {/*直下セレクター．footerの1つ内部にあるタグに対する操作を行うということ．いくつもネストしている者には関与しない．一つ下のみ*/
    color: #457b9d;
}

input[type="password"] {/*属性セレクター．type属性がtextのinputをすべて選択．[]の中にtypeとかclassとか結構つかえるもの*/
    color: greenyellow;
}

a[href*="google"] {
    color: magenta;
}

.post a:hover {/*擬似クラス．セレクターに負荷するキーワードであり，選択された要素に対して特定の状態を指定する．:から始まる*/
    /* :hoverは，カーソルをそのhoverの左に書いたタグの部分の上に持っていくと，以下に書いたものを表示する（下線が表示される） */
    text-decoration: underline;
}

.post button:active {/*クラスセレクター＋子孫セレクタ―＋擬似クラス*/
    /* ボタンをクリックするとボタンの背景が水色になる */
    background-color: aqua;
}

.post:nth-of-type(2n) {/*2列ごとに背景の色を変えるみたいな感じ*/
    background-color: #c9d5c5;
}
/* 擬似クラスは要素の状態を指定できたのにたいして，擬似要素は要素の場所を指定する */
/* セミコロンの数は擬似クラスが1つ，擬似要素が2つだが，どっちも1つでも2つでもコンパイル時は問題ない */
h2:first-letter {
    font-size: 50px;
}

p::first-line {
    color: purple;
}

::selection {/*ハイライトしたときの設定．ハイライト＝カーソルでクリックしながら範囲選択するあれ*/
    background-color: sandybrown;
}

.post button:hover {
    background-color: #e63946;
    color: #f1faee;
}

/* 詳細度：どのcssプロパティが要素に最も関係があるか，適応されるかをブラウザーが決定する手段．複数のスタイルが競合した場合，よりその要素と関係があるセレクターを持つスタイルが勝つ． */
/* [1]IDセレクター > [2]クラス,属性，擬似クラス，セレクター > [3]要素型，擬似要素，セレクター のような優先度になっている*/
/* 上のボタンの方が下のボタンのやつより詳細度は高い．競合している要素のみこの現象が起こる */
/* 詳細度めっちゃ大事 */
/* IDセレクタよりインラインスタイル（htmlに直接書く方法 （例：style="color: coral"））の方が優先度は高いが，あまり使わない方が良い． どこで定義しているかわかりづらいから*/
/* !importantを使うのはタブーと思え．最強の宣言だから，他のどのCSSの宣言も上書きしてしまうので，デバッグがめっちゃむずくなる．多用するとなおイ意味不になる．悪い習慣．使わざるを得ないときだけ使うように */
button:hover {
    background-color: olive;
}

button {
    background-color: magenta !important;
}
